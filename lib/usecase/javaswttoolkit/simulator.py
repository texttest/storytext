
import usecase.guishared
from org.eclipse import swt
from org.eclipse.swtbot.swt.finder import SWTBot
from org.eclipse.swtbot.swt.finder.widgets import SWTBotMenu
from org.eclipse.swtbot.swt.finder.results import VoidResult
from org.eclipse.swtbot.swt.finder.finders import UIThreadRunnable
from org.hamcrest.core import IsAnything
from java.lang import IndexOutOfBoundsException

class WidgetAdapter(usecase.guishared.WidgetAdapter):
    def getChildWidgets(self):
        return [] # don't use this...
        
    def getWidgetTitle(self):
        return ""
        
    def getLabel(self):
        try:
            return self.widget.getText().replace("&", "").split("\t")[0]
        except:
            return ""
        
    def isAutoGenerated(self, name):
        return True

    def getName(self):
        return ""

usecase.guishared.WidgetAdapter.adapterClass = WidgetAdapter    

def runOnUIThread(method, *args):
    class PythonVoidResult(VoidResult):
        def run(self):
            method(*args)

    UIThreadRunnable.syncExec(PythonVoidResult())
        
class MenuItemEvent(usecase.guishared.GuiEvent):
    def connectRecord(self, method):
        class RecordListener(swt.widgets.Listener):
            def handleEvent(listenerSelf, e):
                method(e, self)

        eventType = getattr(swt.SWT, self.getAssociatedSignal(self.widget))
        try:
            # Three indirections: WidgetAdapter -> SWTBotMenu -> MenuItem
            runOnUIThread(self.widget.widget.widget.addListener, eventType, RecordListener())
        except: # Get 'widget is disposed' sometimes, don't know why...
            pass
    
    def generate(self, *args):
        self.widget.click()

    @classmethod
    def getAssociatedSignal(cls, widget):
        return "Selection"


class WidgetMonitor:
    botClass = SWTBot
    def __init__(self):
        self.bot = self.botClass()

    def forceShellActive(self):
        runOnUIThread(self.bot.getFinder().getShells()[0].forceActive)

    def findAllWidgets(self):
        matcher = IsAnything()
        widgets = self.bot.widgets(matcher)
        menus = self.bot.getFinder().findMenus(matcher)
        widgets.addAll(menus)
        return self.makeAdapters(widgets)

    def makeAdapters(self, widgets):
        adapters = []
        for widget in widgets:
            if isinstance(widget, swt.widgets.MenuItem):
                try:
                    adapters.append(WidgetAdapter(SWTBotMenu(widget)))
                except:
                    pass # Get 'widget is disposed' sometimes, don't know why
        return adapters

    def describe(self, describer):
        try:
            activeShell = self.bot.getFinder().activeShell()
            runOnUIThread(describer.describe, activeShell)
        except IndexOutOfBoundsException:
            pass # probably we have already exited, don't bother with a description

eventTypes =  [ (SWTBotMenu,  [ MenuItemEvent ]) ]

